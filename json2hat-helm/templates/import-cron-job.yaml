{{- $skipCron := .Values.skipCron -}}
{{ if not $skipCron }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: '{{ .Values.importPodName }}'
  labels:
    type: 'cron'
{{- with .Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ include "json2hat-helm.name" . }}
    helm.sh/chart: {{ include "json2hat-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  schedule: '{{ .Values.schedule }}'
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  jobTemplate:
    spec:
      template:
        metadata:
          name: '{{ .Values.importPodName }}'
          labels:
            type: 'sync'
{{- with .Values.labels -}}
{{ toYaml . | nindent 12 }}
{{ end }}
            app.kubernetes.io/name: {{ include "json2hat-helm.name" . }}
            helm.sh/chart: {{ include "json2hat-helm.chart" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            app.kubernetes.io/managed-by: {{ .Release.Service }}
        spec:
          containers:
          - command:
            - {{ .Values.importCommand }}
{{ if .Values.importCommandArgs }}
            args:
{{- with .Values.importCommandArgs -}}
{{ toYaml . | nindent 14 }}
{{ end }}
{{ end }}
{{ if .Values.useResourcesLimits }}
            resources:
              requests:
                memory: '{{ .Values.requestsMemory }}'
                cpu: '{{ .Values.requestsCPU }}'
              limits:
                memory: '{{ .Values.limitsMemory }}'
                cpu: '{{ .Values.limitsCPU }}'
{{ end }}
            env:
            - name: SH_DSN
              value: '{{ .Values.shDSN }}'
            - name: SH_PROTO
              value: '{{ .Values.shProto }}'
            - name: SH_PARAMS
              value: '{{ .Values.shParams }}'
            - name: SH_CLEANUP
              value: '{{ .Values.shCleanup }}'
            - name: SH_TEST_CONNECT
              value: '{{ .Values.shTestConnect }}'
            - name: SH_REMOTE_JSON_PATH
              value: '{{ .Values.shRemoteJSONPath }}'
            - name: SH_REMOTE_YAML_PATH
              value: '{{ .Values.shRemoteYAMLPath }}'
            - name: SH_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_USER.secret
            - name: SH_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_HOST.secret
            - name: SH_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_PORT.secret
            - name: SH_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_PASS.secret
            - name: SH_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.shSecret }}
                  key: SH_DB.secret
            image: {{ .Values.importImage }}
            imagePullPolicy: {{ .Values.imagePullPolicy }}
            name: '{{ .Values.importPodName }}'
          restartPolicy: {{ .Values.importRestartPolicy }}
          nodeSelector:
{{- with .Values.nodeSelector -}}
{{ toYaml . | nindent 12 }}
{{ end }}
{{ end }}
