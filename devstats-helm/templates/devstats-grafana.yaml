{{- $skipGrafanas := .Values.skipGrafanas -}}
{{ if not $skipGrafanas }}
{{- $root := . -}}
{{- range $index, $_ := .Values.projects -}}
{{- if and (or (eq ($index|int) ($root.Values.indexGrafanasFrom|int)) (gt ($index|int) ($root.Values.indexGrafanasFrom|int))) (lt ($index|int) ($root.Values.indexGrafanasTo|int)) -}}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: '{{ $root.Values.grafanaPodName }}-{{ .proj }}'
  labels:
    type: 'grafana'
    proj: {{ .proj }}
{{- with $root.Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ $root.Chart.Name }}
    helm.sh/chart: {{ printf "%s-%s" $root.Chart.Name $root.Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/instance: {{ $root.Release.Name }}
    app.kubernetes.io/managed-by: {{ $root.Release.Service }}
spec:
  replicas: {{ $root.Values.grafanaNReplicas }}
  selector:
    matchLabels:
      type: 'grafana'
      proj: {{ .proj }}
{{- with $root.Values.labels -}}
{{ toYaml . | nindent 6 }}
{{ end }}
      app.kubernetes.io/name: {{ $root.Chart.Name }}
      helm.sh/chart: {{ printf "%s-%s" $root.Chart.Name $root.Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
      app.kubernetes.io/instance: {{ $root.Release.Name }}
      app.kubernetes.io/managed-by: {{ $root.Release.Service }}
  template:
    metadata:
      labels:
        type: 'grafana'
        proj: {{ .proj }}
{{- with $root.Values.labels -}}
{{ toYaml . | nindent 8 }}
{{ end }}
        app.kubernetes.io/name: {{ $root.Chart.Name }}
        helm.sh/chart: {{ printf "%s-%s" $root.Chart.Name $root.Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/instance: {{ $root.Release.Name }}
        app.kubernetes.io/managed-by: {{ $root.Release.Service }}
    spec:
      containers:
      - command:
        - {{ $root.Values.grafanaCommand }}
{{ if $root.Values.grafanaCommandArgs }}
        args:
{{- with $root.Values.grafanaCommandArgs -}}
{{ toYaml . | nindent 10 }}
{{ end }}
{{ end }}
{{ if $root.Values.useResourcesLimits }}
        resources:
          requests:
            memory: '{{ $root.Values.requestsMemory }}'
            cpu: '{{ $root.Values.requestsCPU }}'
          limits:
            memory: '{{ $root.Values.limitsMemory }}'
            cpu: '{{ $root.Values.limitsCPU }}'
{{ end }}
        name: '{{ $root.Values.grafanaPodName }}-{{ .proj }}'
        image: {{ $root.Values.grafanaImage }}
        imagePullPolicy: {{ $root.Values.imagePullPolicy }}
        ports:
        - containerPort: {{ $root.Values.grafanaPort }}
        env:
        - name: ICON
          value: {{ .icon }}
        - name: ORGNAME
          value: {{ .org }}
        - name: PROJ
          value: {{ .proj }}
        - name: PG_DB
          value: {{ .db }}
        - name: PG_HOST
          valueFrom:
            secretKeyRef:
              name: {{ $root.Values.pgSecret }}
              key: PG_HOST.secret
        - name: PG_PORT
          valueFrom:
            secretKeyRef:
              name: {{ $root.Values.pgSecret }}
              key: PG_PORT.secret
        - name: PG_PASS
          valueFrom:
            secretKeyRef:
              name: {{ $root.Values.pgSecret }}
              key: PG_PASS.secret
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ $root.Values.grafanaSecret }}
              key: GF_SECURITY_ADMIN_USER.secret
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $root.Values.grafanaSecret }}
              key: GF_SECURITY_ADMIN_PASSWORD.secret
      restartPolicy: {{ $root.Values.grafanaRestartPolicy }}
      nodeSelector:
{{- with $root.Values.nodeSelector -}}
{{ toYaml . | nindent 8 }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
