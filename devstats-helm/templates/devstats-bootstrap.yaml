---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Values.bootstrapPodName }}
  labels:
    proj: bootstrap
{{- with .Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ include "devstats-helm.name" . }}
    helm.sh/chart: {{ include "devstats-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  containers:
  - command:
    - {{ .Values.bootstrapCommand }}
    env:
    - name: INIT
      value: "1"
    - name: ONLYINIT
      value: "1"
    - name: SKIPTEMP
      value: "1"
    - name: NOLOCK
      value: "1"
    - name: NOBACKUP
      value: "1"
    - name: SKIPADDALL
      value: "1"
    - name: TEST_SERVER
      value: "1"
    - name: UDROP
      value: {{ .Values.ubootstrapUDrop }}
    - name: LDROP
      value: {{ .Values.bootstrapLDrop }}
    - name: NOCREATE
      value: {{ .Values.bootstrapNoCreate }}
    - name: GHA2DB_GITHUB_OAUTH
      valueFrom:
        secretKeyRef:
          name: {{ .Values.oauthSecret }}
          key: GHA2DB_GITHUB_OAUTH.secret
    - name: ES_PORT
      valueFrom:
        secretKeyRef:
          name: {{ .Values.esSecret }}
          key: ES_PORT.secret
    - name: ES_HOST
      valueFrom:
        secretKeyRef:
          name: {{ .Values.esSecret }}
          key: ES_HOST.secret
    - name: ES_PROTO
      valueFrom:
        secretKeyRef:
          name: {{ .Values.esSecret }}
          key: ES_PROTO.secret
    - name: PG_HOST
      valueFrom:
        secretKeyRef:
          name: {{ .Values.pgSecret }}
          key: PG_HOST.secret
    - name: PG_PORT
      valueFrom:
        secretKeyRef:
          name: {{ .Values.pgSecret }}
          key: PG_PORT.secret
    - name: PG_PASS
      valueFrom:
        secretKeyRef:
          name: {{ .Values.pgSecret }}
          key: PG_PASS.secret
    - name: PG_PASS_RO
      valueFrom:
        secretKeyRef:
          name: {{ .Values.pgSecret }}
          key: PG_PASS_RO.secret
    - name: PG_PASS_TEAM
      valueFrom:
        secretKeyRef:
          name: {{ .Values.pgSecret }}
          key: PG_PASS_TEAM.secret
    - name: PG_ADMIN_USER
      valueFrom:
        secretKeyRef:
          name: {{ .Values.pgSecret }}
          key: PG_ADMIN_USER.secret
    image: {{ .Values.proivisionImage }}
    imagePullPolicy: {{ .Values.imagePullPolicy }}
    name: {{ .Values.bootstrapPodName }}
    volumeMounts:
    - name: {{ .Values.volumeMountName }}
      mountPath: '{{ .Values.volumeMountPath }}'
  volumes:
  - name: {{ .Values.volumeName }}
    persistentVolumeClaim:
      claimName: {{ .Values.pvName }}
  restartPolicy: {{ .Values.bootstrapRestartPolicy }}
